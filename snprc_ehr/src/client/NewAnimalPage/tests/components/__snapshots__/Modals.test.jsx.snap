// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Modal tests Should render the CancelChangeModal 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="center-modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Cancel changes?
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <p>
      Are you sure you want to cancel?
    </p>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      disabled={false}
      onClick={[Function]}
    >
      Yes
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="primary"
      disabled={false}
      onClick={[Function]}
    >
      No
    </Button>
  </ModalFooter>
</Modal>
`;

exports[`Modal tests Should render the SaveModal 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogClassName="custom-modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Okay to Save?
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <SummaryPanel
      infoMessages={
        Array [
          Object {
            "key": 1,
            "value": "Please review data before saving.",
          },
          Object {
            "key": 2,
            "value": "Hover cursor over fields for full text.",
          },
        ]
      }
      newAnimalData={
        Object {
          "acqDate": Object {
            "date": "1970-01-01T00:00:00.000Z",
          },
          "acquisitionType": undefined,
          "animalAccount": undefined,
          "birthDate": Object {
            "date": "1970-01-01T00:00:00.000Z",
          },
          "cage": Object {
            "value": undefined,
          },
          "colony": undefined,
          "dam": undefined,
          "diet": undefined,
          "gender": undefined,
          "iacuc": undefined,
          "id": undefined,
          "ownerInstitution": undefined,
          "pedigree": undefined,
          "responsibleInstitution": undefined,
          "room": undefined,
          "sire": undefined,
          "species": undefined,
        }
      }
    />
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      disabled={false}
      onClick={[Function]}
    >
      Close
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="primary"
      disabled={false}
      onClick={[Function]}
    >
      Save changes
    </Button>
  </ModalFooter>
</Modal>
`;
