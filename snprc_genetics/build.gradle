import org.labkey.gradle.util.BuildUtils
import org.labkey.gradle.util.GroupNames

sourceSets {
    transform {
        java {
            srcDirs = ['resources/transform/src']
        }
    }
}

dependencies {
    transformImplementation "org.apache.poi:poi:${poiVersion}"
    transformImplementation "org.apache.poi:poi-ooxml:${poiVersion}"
    transformImplementation "org.apache.pdfbox:pdfbox:${pdfboxVersion}"
    transformImplementation "com.google.guava:guava:${guavaVersion}"
    transformImplementation "org.apache.commons:commons-collections4:${commonsCollections4Version}"

    BuildUtils.addLabKeyDependency(project: project, config: "modules", depProjectPath: ":server:modules:LabDevKitModules:laboratory", depProjectConfig: "published", depExtension: "module")
    BuildUtils.addLabKeyDependency(project: project, config: "modules", depProjectPath: ":server:modules:snprcEHRModules:snprc_ehr", depProjectConfig: "published", depExtension: "module")

}

configurations {
    transformJars {
        canBeResolved = true
        extendsFrom(transformImplementation)
    }
}

project.tasks.register("transformJar", Jar)
    {Jar jar ->
        jar.group = GroupNames.BUILD
        jar.description = "Create the genetics transform jar file"
        jar.from project.sourceSets.transform.output
        jar.from { configurations.transformJars.collect { it.isDirectory() ? it : zipTree(it) }}
        jar.duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
        jar.archiveBaseName.set("GeneticsTransform")
        jar.destinationDirectory.set(project.layout.buildDirectory.file("artifacts/snprc").get().asFile)
    }

project.tasks.named('module').configure { dependsOn(project.tasks.transformJar) }
